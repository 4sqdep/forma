version: '3.8'

volumes:
  static_volume:
  media_volume:
  production_postgres_data: {}
  production_postgres_data_backups: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: gidro_django
    container_name: django
    networks:
      - gidro_network
    depends_on:
      - postgres
    volumes:
      - .:/app:cached
      - static_volume:/var/www/static
      - media_volume:var/www/media
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: gidro_postgres
    container_name: postgres
    networks:
      - gidro_network
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:cached
      - production_postgres_data_backups:/backups:cached
    env_file:
      - ./.envs/.production/.postgres

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: gidro_nginx
    container_name: nginx
    networks:
      - gidro_network
    volumes:
      - static_volume:/var/www/static
      - media_volume:/var/www/media
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - django
    command: /bin/bash -c "chown -R nginx:nginx /var/www/static && chmod -R 755 /var/www/static && nginx -g 'daemon off;'"

networks:
  gidro_network:
    driver: bridge
